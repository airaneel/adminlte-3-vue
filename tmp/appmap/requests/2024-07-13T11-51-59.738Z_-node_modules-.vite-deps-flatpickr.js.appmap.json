{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/flatpickr.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:5173",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:128.0) Gecko/20100101 Firefox/128.0",
          "Accept": "*/*",
          "Accept-Language": "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Connection": "keep-alive",
          "Referer": "http://localhost:5173/src/components/regru/field.vue",
          "Cookie": "csrftoken=JoG0lboZVZucsyUC10B83fyK2PSrJqgf; _pk_id.1.1fff=76aff4dcfa6d42d0.1719754794.; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzIwMzczOTQ1LCJpYXQiOjE3MjAzNzM2NDUsImp0aSI6IjkyYjQzYmVjZjYxOTQyYTg5NDNjNWU2OGVjMDllYTQ3IiwidXNlcl9pZCI6MX0.9q_idMkvw61A5G6GQkM1WGfNo-jUZdncjM_JDqPh1Ps; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTcyMDQ2MDA0NSwiaWF0IjoxNzIwMzczNjQ1LCJqdGkiOiIwODJmMTYzMDEwNWY0YmViYTE2MjZjNjI5Y2U0ODFkMSIsInVzZXJfaWQiOjF9.Kh6m-J9pRfNqxauGr3E2UcLozG_px7iFCtCHeCHGb8I; tabstyle=html-tab; vuexy-color-scheme=dark; vuexy-isVerticalNavCollapsed=false; r-color-scheme=dark; rh-color-scheme=dark; rdh-color-scheme=dark; rdh--color-scheme=dark; rdh-corp-color-scheme=dark; rdh-corporte-color-scheme=dark; rdh-corporate-color-scheme=dark; rRD-corporate-color-scheme=dark; -corporate-color-scheme=dark; RDH-corporate-color-scheme=dark; RDH-corporate-isVerticalNavCollapsed=true; RDH-color-scheme=dark; -color-scheme=dark; R-color-scheme=dark; RDH-theme=light; RDH-corporate-theme=dark",
          "Sec-Fetch-Dest": "script",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Site": "same-origin",
          "Pragma": "no-cache",
          "Cache-Control": "no-cache"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'e79d9748'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"1652e-If0J2etYeRjkIR8xsiVbM48sHOw\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import \"/node_modules/.vite/deps/chunk-G3PMV62Z.js?v=e79d9748\";\n\n// node_modules/flatpickr/dist/esm/types/options.js\nvar HOOKS = [\n  \"onChange\",\n  \"onClose\",\n  \"onDayCreate\",\n  \"onDestroy\",\n  \"onKeyDown\",\n  \"onMonthChange\",\n  \"onOpen\",\n  \"onParseConfig\",\n  \"onReady\",\n  \"onValueUpdate\",\n  \"onYearChange\",\n  \"onPreCalendarPosition\"\n];\nvar defaults = {\n  _disable: [],\n  allowInput: false,\n  allowInvalidPreload: false,\n  altFormat: \"F j, Y\",\n  altInput: false,\n  altInputClass: \"form-control input\",\n  animate: typeof window === \"object\" && window.navigator.userAgent.indexOf(\"MSIE\") === -1,\n  ariaDateFormat: \"F j, Y\",\n  autoFillDefaultTime: true,\n  clickOpens: true,\n  closeOnSelect: true,\n  conjunction: \", \",\n  dateFormat: \"Y-m-d\",\n  defaultHour: 12,\n  defaultMinute: 0,\n  defaultSeconds: 0,\n  disable: [],\n  disableMobile: false,\n  enableSeconds: false,\n  enableTime: false,\n  errorHandler: function(err) {\n    return typeof console !== \"undefined\" && console.warn(err);\n  },\n  getWeek: function(givenDate) {\n    var date = new Date(givenDate.getTime());\n    date.setHours(0, 0, 0, 0);\n    date.setDate(date.getDate() + 3 - (date.getDay() + 6) % 7);\n    var week1 = new Date(date.getFullYear(), 0, 4);\n    return 1 + Math.round(((date.getTime() - week1.getTime()) / 864e5 - 3 + (week1.getDay() + 6) % 7) / 7);\n  },\n  hourIncrement: 1,\n  ignoredFocusElements: [],\n  inline: false,\n  locale: \"default\",\n  minuteIncrement: 5,\n  mode: \"single\",\n  monthSelectorType: \"dropdown\",\n  nextArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M13.207 8.472l-7.854 7.854-0.707-0.707 7.146-7.146-7.146-7.148 0.707-0.707 7.854 7.854z' /></svg>\",\n  noCalendar: false,\n  now: /* @__PURE__ */ new Date(),\n  onChange: [],\n  onClose: [],\n  onDayCreate: [],\n  onDestroy: [],\n  onKeyDown: [],\n  onMonthChange: [],\n  onOpen: [],\n  onParseConfig: [],\n  onReady: [],\n  onValueUpdate: [],\n  onYearChange: [],\n  onPreCalendarPosition: [],\n  plugins: [],\n  position: \"auto\",\n  positionElement: void 0,\n  prevArrow: \"<svg version='1.1' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink' viewBox='0 0 17 17'><g></g><path d='M5.207 8.471l7.146 7.147-0.707 0.707-7.853-7.854 7.854-7.853 0.707 0.707-7.147 7.146z' /></svg>\",\n  shorthandCurrentMonth: false,\n  showMonths: 1,\n  static: false,\n  time_24hr: false,\n  weekNumbers: false,\n  wrap: false\n};\n\n// node_modules/flatpickr/dist/esm/l10n/default.js\nvar english = {\n  weekdays: {\n    shorthand: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n    longhand: [\n      \"Sunday\",\n      \"Monday\",\n      \"Tuesday\",\n      \"Wednesday\",\n      \"Thursday\",\n      \"Friday\",\n      \"Saturday\"\n    ]\n  },\n  months: {\n    shorthand: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"May\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Oct\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    longhand: [\n      \"January\",\n      \"February\",\n      \"March\",\n      \"April\",\n      \"May\",\n      \"June\",\n      \"July\",\n      \"August\",\n      \"September\",\n      \"October\",\n      \"November\",\n      \"December\"\n    ]\n  },\n  daysInMonth: [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31],\n  firstDayOfWeek: 0,\n  ordinal: function(nth) {\n    var s = nth % 100;\n    if (s > 3 && s < 21)\n      return \"th\";\n    switch (s % 10) {\n      case 1:\n        return \"st\";\n      case 2:\n        return \"nd\";\n      case 3:\n        return \"rd\";\n      default:\n        return \"th\";\n    }\n  },\n  rangeSeparator: \" to \",\n  weekAbbreviation: \"Wk\",\n  scrollTitle: \"Scroll to increment\",\n  toggleTitle: \"Click to toggle\",\n  amPM: [\"AM\", \"PM\"],\n  yearAriaLabel: \"Year\",\n  monthAriaLabel: \"Month\",\n  hourAriaLabel: \"Hour\",\n  minuteAriaLabel: \"Minute\",\n  time_24hr: false\n};\nvar default_default = english;\n\n// node_modules/flatpickr/dist/esm/utils/index.js\nvar pad = function(number, length) {\n  if (length === void 0) {\n    length = 2;\n  }\n  return (\"000\" + number).slice(length * -1);\n};\nvar int = function(bool) {\n  return bool === true ? 1 : 0;\n};\nfunction debounce(fn, wait) {\n  var t;\n  return function() {\n    var _this = this;\n    var args = arguments;\n    clearTimeout(t);\n    t = setTimeout(function() {\n      return fn.apply(_this, args);\n    }, wait);\n  };\n}\nvar arrayify = function(obj) {\n  return obj instanceof Array ? obj : [obj];\n};\n\n// node_modules/flatpickr/dist/esm/utils/dom.js\nfunction toggleClass(elem, className, bool) {\n  if (bool === true)\n    return elem.classList.add(className);\n  elem.classList.remove(className);\n}\nfunction createElement(tag, className, content) {\n  var e = window.document.createElement(tag);\n  className = className || \"\";\n  content = content || \"\";\n  e.className = className;\n  if (content !== void 0)\n    e.textContent = content;\n  return e;\n}\nfunction clearNode(node) {\n  while (node.firstChild)\n    node.removeChild(node.firstChild);\n}\nfunction findParent(node, condition) {\n  if (condition(node))\n    return node;\n  else if (node.parentNode)\n    return findParent(node.parentNode, condition);\n  return void 0;\n}\nfunction createNumberInput(inputClassName, opts) {\n  var wrapper = createElement(\"div\", \"numInputWrapper\"), numInput = createElement(\"input\", \"numInput \" + inputClassName), arrowUp = createElement(\"span\", \"arrowUp\"), arrowDown = createElement(\"span\", \"arrowDown\");\n  if (navigator.userAgent.indexOf(\"MSIE 9.0\") === -1) {\n    numInput.type = \"number\";\n  } else {\n    numInput.type = \"text\";\n    numInput.pattern = \"\\\\d*\";\n  }\n  if (opts !== void 0)\n    for (var key in opts)\n      numInput.setAttribute(key, opts[key]);\n  wrapper.appendChild(numInput);\n  wrapper.appendChild(arrowUp);\n  wrapper.appendChild(arrowDown);\n  return wrapper;\n}\nfunction getEventTarget(event) {\n  try {\n    if (typeof event.composedPath === \"function\") {\n      var path = event.composedPath();\n      return path[0];\n    }\n    return event.target;\n  } catch (error) {\n    return event.target;\n  }\n}\n\n// node_modules/flatpickr/dist/esm/utils/formatting.js\nvar doNothing = function() {\n  return void 0;\n};\nvar monthToStr = function(monthNumber, shorthand, locale) {\n  return locale.months[shorthand ? \"shorthand\" : \"longhand\"][monthNumber];\n};\nvar revFormat = {\n  D: doNothing,\n  F: function(dateObj, monthName, locale) {\n    dateObj.setMonth(locale.months.longhand.indexOf(monthName));\n  },\n  G: function(dateObj, hour) {\n    dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n  },\n  H: function(dateObj, hour) {\n    dateObj.setHours(parseFloat(hour));\n  },\n  J: function(dateObj, day) {\n    dateObj.setDate(parseFloat(day));\n  },\n  K: function(dateObj, amPM, locale) {\n    dateObj.setHours(dateObj.getHours() % 12 + 12 * int(new RegExp(locale.amPM[1], \"i\").test(amPM)));\n  },\n  M: function(dateObj, shortMonth, locale) {\n    dateObj.setMonth(locale.months.shorthand.indexOf(shortMonth));\n  },\n  S: function(dateObj, seconds) {\n    dateObj.setSeconds(parseFloat(seconds));\n  },\n  U: function(_, unixSeconds) {\n    return new Date(parseFloat(unixSeconds) * 1e3);\n  },\n  W: function(dateObj, weekNum, locale) {\n    var weekNumber = parseInt(weekNum);\n    var date = new Date(dateObj.getFullYear(), 0, 2 + (weekNumber - 1) * 7, 0, 0, 0, 0);\n    date.setDate(date.getDate() - date.getDay() + locale.firstDayOfWeek);\n    return date;\n  },\n  Y: function(dateObj, year) {\n    dateObj.setFullYear(parseFloat(year));\n  },\n  Z: function(_, ISODate) {\n    return new Date(ISODate);\n  },\n  d: function(dateObj, day) {\n    dateObj.setDate(parseFloat(day));\n  },\n  h: function(dateObj, hour) {\n    dateObj.setHours((dateObj.getHours() >= 12 ? 12 : 0) + parseFloat(hour));\n  },\n  i: function(dateObj, minutes) {\n    dateObj.setMinutes(parseFloat(minutes));\n  },\n  j: function(dateObj, day) {\n    dateObj.setDate(parseFloat(day));\n  },\n  l: doNothing,\n  m: function(dateObj, month) {\n    dateObj.setMonth(parseFloat(month) - 1);\n  },\n  n: function(dateObj, month) {\n    dateObj.setMonth(parseFloat(month) - 1);\n  },\n  s: function(dateObj, seconds) {\n    dateObj.setSeconds(parseFloat(seconds));\n  },\n  u: function(_, unixMillSeconds) {\n    return new Date(parseFloat(unixMillSeconds));\n  },\n  w: doNothing,\n  y: function(dateObj, year) {\n    dateObj.setFullYear(2e3 + parseFloat(year));\n  }\n};\nvar tokenRegex = {\n  D: \"\",\n  F: \"\",\n  G: \"(\\\\d\\\\d|\\\\d)\",\n  H: \"(\\\\d\\\\d|\\\\d)\",\n  J: \"(\\\\d\\\\d|\\\\d)\\\\w+\",\n  K: \"\",\n  M: \"\",\n  S: \"(\\\\d\\\\d|\\\\d)\",\n  U: \"(.+)\",\n  W: \"(\\\\d\\\\d|\\\\d)\",\n  Y: \"(\\\\d{4})\",\n  Z: \"(.+)\",\n  d: \"(\\\\d\\\\d|\\\\d)\",\n  h: \"(\\\\d\\\\d|\\\\d)\",\n  i: \"(\\\\d\\\\d|\\\\d)\",\n  j: \"(\\\\d\\\\d|\\\\d)\",\n  l: \"\",\n  m: \"(\\\\d\\\\d|\\\\d)\",\n  n: \"(\\\\d\\\\d|\\\\d)\",\n  s: \"(\\\\d\\\\d|\\\\d)\",\n  u: \"(.+)\",\n  w: \"(\\\\d\\\\d|\\\\d)\",\n  y: \"(\\\\d{2})\"\n};\nvar formats = {\n  Z: function(date) {\n    return date.toISOString();\n  },\n  D: function(date, locale, options) {\n    return locale.weekdays.shorthand[formats.w(date, locale, options)];\n  },\n  F: function(date, locale, options) {\n    return monthToStr(formats.n(date, locale, options) - 1, false, locale);\n  },\n  G: function(date, locale, options) {\n    return pad(formats.h(date, locale, options));\n  },\n  H: function(date) {\n    return pad(date.getHours());\n  },\n  J: function(date, locale) {\n    return locale.ordinal !== void 0 ? date.getDate() + locale.ordinal(date.getDate()) : date.getDate();\n  },\n  K: function(date, locale) {\n    return locale.amPM[int(date.getHours() > 11)];\n  },\n  M: function(date, locale) {\n    return monthToStr(date.getMonth(), true, locale);\n  },\n  S: function(date) {\n    return pad(date.getSeconds());\n  },\n  U: function(date) {\n    return date.getTime() / 1e3;\n  },\n  W: function(date, _, options) {\n    return options.getWeek(date);\n  },\n  Y: function(date) {\n    return pad(date.getFullYear(), 4);\n  },\n  d: function(date) {\n    return pad(date.getDate());\n  },\n  h: function(date) {\n    return date.getHours() % 12 ? date.getHours() % 12 : 12;\n  },\n  i: function(date) {\n    return pad(date.getMinutes());\n  },\n  j: function(date) {\n    return date.getDate();\n  },\n  l: function(date, locale) {\n    return lo... (81438 more characters)"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.0002004169946303591
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.0",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.11.1"
    },
    "app": "rdh-admin",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/flatpickr.js (200) — 2024-07-13T11:51:59.738Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/flatpickr.js"
        }
      ]
    }
  ]
}