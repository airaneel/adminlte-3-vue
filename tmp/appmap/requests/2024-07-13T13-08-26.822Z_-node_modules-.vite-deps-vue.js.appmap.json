{
  "events": [
    {
      "event": "call",
      "http_server_request": {
        "path_info": "/node_modules/.vite/deps/vue.js",
        "request_method": "GET",
        "headers": {
          "Host": "localhost:5173",
          "User-Agent": "Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:128.0) Gecko/20100101 Firefox/128.0",
          "Accept": "*/*",
          "Accept-Language": "ru-RU,ru;q=0.8,en-US;q=0.5,en;q=0.3",
          "Accept-Encoding": "gzip, deflate, br, zstd",
          "Connection": "keep-alive",
          "Referer": "http://localhost:5173/src/main.ts?t=1720874283103",
          "Cookie": "csrftoken=JoG0lboZVZucsyUC10B83fyK2PSrJqgf; _pk_id.1.1fff=76aff4dcfa6d42d0.1719754794.; accessToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoiYWNjZXNzIiwiZXhwIjoxNzIwMzczOTQ1LCJpYXQiOjE3MjAzNzM2NDUsImp0aSI6IjkyYjQzYmVjZjYxOTQyYTg5NDNjNWU2OGVjMDllYTQ3IiwidXNlcl9pZCI6MX0.9q_idMkvw61A5G6GQkM1WGfNo-jUZdncjM_JDqPh1Ps; refreshToken=eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ0b2tlbl90eXBlIjoicmVmcmVzaCIsImV4cCI6MTcyMDQ2MDA0NSwiaWF0IjoxNzIwMzczNjQ1LCJqdGkiOiIwODJmMTYzMDEwNWY0YmViYTE2MjZjNjI5Y2U0ODFkMSIsInVzZXJfaWQiOjF9.Kh6m-J9pRfNqxauGr3E2UcLozG_px7iFCtCHeCHGb8I; tabstyle=html-tab; vuexy-color-scheme=dark; vuexy-isVerticalNavCollapsed=false; r-color-scheme=dark; rh-color-scheme=dark; rdh-color-scheme=dark; rdh--color-scheme=dark; rdh-corp-color-scheme=dark; rdh-corporte-color-scheme=dark; rdh-corporate-color-scheme=dark; rRD-corporate-color-scheme=dark; -corporate-color-scheme=dark; RDH-corporate-color-scheme=dark; RDH-corporate-isVerticalNavCollapsed=true; RDH-color-scheme=dark; -color-scheme=dark; R-color-scheme=dark; RDH-theme=light; RDH-corporate-theme=dark",
          "Sec-Fetch-Dest": "script",
          "Sec-Fetch-Mode": "cors",
          "Sec-Fetch-Site": "same-origin",
          "Pragma": "no-cache",
          "Cache-Control": "no-cache"
        },
        "protocol": "HTTP/1.1"
      },
      "id": 1,
      "thread_id": 0,
      "message": [
        {
          "name": "v",
          "value": "'e79d9748'",
          "class": "String"
        }
      ]
    },
    {
      "event": "return",
      "http_server_response": {
        "status_code": 200,
        "headers": {
          "Access-Control-Allow-Origin": "*",
          "Content-Type": "text/javascript",
          "Cache-Control": "max-age=31536000,immutable",
          "Etag": "W/\"14b5-zS5Z5Nuipr3+jFexKaUI9s5rDq0\""
        },
        "return_value": {
          "class": "[ResponseBody]",
          "value": "import {\n  BaseTransition,\n  BaseTransitionPropsValidators,\n  Comment,\n  DeprecationTypes,\n  EffectScope,\n  ErrorCodes,\n  ErrorTypeStrings,\n  Fragment,\n  KeepAlive,\n  ReactiveEffect,\n  Static,\n  Suspense,\n  Teleport,\n  Text,\n  TrackOpTypes,\n  Transition,\n  TransitionGroup,\n  TriggerOpTypes,\n  VueElement,\n  assertNumber,\n  callWithAsyncErrorHandling,\n  callWithErrorHandling,\n  camelize,\n  capitalize,\n  cloneVNode,\n  compatUtils,\n  compile,\n  computed,\n  createApp,\n  createBaseVNode,\n  createBlock,\n  createCommentVNode,\n  createElementBlock,\n  createHydrationRenderer,\n  createPropsRestProxy,\n  createRenderer,\n  createSSRApp,\n  createSlots,\n  createStaticVNode,\n  createTextVNode,\n  createVNode,\n  customRef,\n  defineAsyncComponent,\n  defineComponent,\n  defineCustomElement,\n  defineEmits,\n  defineExpose,\n  defineModel,\n  defineOptions,\n  defineProps,\n  defineSSRCustomElement,\n  defineSlots,\n  devtools,\n  effect,\n  effectScope,\n  getCurrentInstance,\n  getCurrentScope,\n  getTransitionRawChildren,\n  guardReactiveProps,\n  h,\n  handleError,\n  hasInjectionContext,\n  hydrate,\n  initCustomFormatter,\n  initDirectivesForSSR,\n  inject,\n  isMemoSame,\n  isProxy,\n  isReactive,\n  isReadonly,\n  isRef,\n  isRuntimeOnly,\n  isShallow,\n  isVNode,\n  markRaw,\n  mergeDefaults,\n  mergeModels,\n  mergeProps,\n  nextTick,\n  normalizeClass,\n  normalizeProps,\n  normalizeStyle,\n  onActivated,\n  onBeforeMount,\n  onBeforeUnmount,\n  onBeforeUpdate,\n  onDeactivated,\n  onErrorCaptured,\n  onMounted,\n  onRenderTracked,\n  onRenderTriggered,\n  onScopeDispose,\n  onServerPrefetch,\n  onUnmounted,\n  onUpdated,\n  openBlock,\n  popScopeId,\n  provide,\n  proxyRefs,\n  pushScopeId,\n  queuePostFlushCb,\n  reactive,\n  readonly,\n  ref,\n  registerRuntimeCompiler,\n  render,\n  renderList,\n  renderSlot,\n  resolveComponent,\n  resolveDirective,\n  resolveDynamicComponent,\n  resolveFilter,\n  resolveTransitionHooks,\n  setBlockTracking,\n  setDevtoolsHook,\n  setTransitionHooks,\n  shallowReactive,\n  shallowReadonly,\n  shallowRef,\n  ssrContextKey,\n  ssrUtils,\n  stop,\n  toDisplayString,\n  toHandlerKey,\n  toHandlers,\n  toRaw,\n  toRef,\n  toRefs,\n  toValue,\n  transformVNodeArgs,\n  triggerRef,\n  unref,\n  useAttrs,\n  useCssModule,\n  useCssVars,\n  useModel,\n  useSSRContext,\n  useSlots,\n  useTransitionState,\n  vModelCheckbox,\n  vModelDynamic,\n  vModelRadio,\n  vModelSelect,\n  vModelText,\n  vShow,\n  version,\n  warn,\n  watch,\n  watchEffect,\n  watchPostEffect,\n  watchSyncEffect,\n  withAsyncContext,\n  withCtx,\n  withDefaults,\n  withDirectives,\n  withKeys,\n  withMemo,\n  withModifiers,\n  withScopeId\n} from \"/node_modules/.vite/deps/chunk-MGOCPVRW.js?v=e79d9748\";\nimport \"/node_modules/.vite/deps/chunk-G3PMV62Z.js?v=e79d9748\";\nexport {\n  BaseTransition,\n  BaseTransitionPropsValidators,\n  Comment,\n  DeprecationTypes,\n  EffectScope,\n  ErrorCodes,\n  ErrorTypeStrings,\n  Fragment,\n  KeepAlive,\n  ReactiveEffect,\n  Static,\n  Suspense,\n  Teleport,\n  Text,\n  TrackOpTypes,\n  Transition,\n  TransitionGroup,\n  TriggerOpTypes,\n  VueElement,\n  assertNumber,\n  callWithAsyncErrorHandling,\n  callWithErrorHandling,\n  camelize,\n  capitalize,\n  cloneVNode,\n  compatUtils,\n  compile,\n  computed,\n  createApp,\n  createBlock,\n  createCommentVNode,\n  createElementBlock,\n  createBaseVNode as createElementVNode,\n  createHydrationRenderer,\n  createPropsRestProxy,\n  createRenderer,\n  createSSRApp,\n  createSlots,\n  createStaticVNode,\n  createTextVNode,\n  createVNode,\n  customRef,\n  defineAsyncComponent,\n  defineComponent,\n  defineCustomElement,\n  defineEmits,\n  defineExpose,\n  defineModel,\n  defineOptions,\n  defineProps,\n  defineSSRCustomElement,\n  defineSlots,\n  devtools,\n  effect,\n  effectScope,\n  getCurrentInstance,\n  getCurrentScope,\n  getTransitionRawChildren,\n  guardReactiveProps,\n  h,\n  handleError,\n  hasInjectionContext,\n  hydrate,\n  initCustomFormatter,\n  initDirectivesForSSR,\n  inject,\n  isMemoSame,\n  isProxy,\n  isReactive,\n  isReadonly,\n  isRef,\n  isRuntimeOnly,\n  isShallow,\n  isVNode,\n  markRaw,\n  mergeDefaults,\n  mergeModels,\n  mergeProps,\n  nextTick,\n  normalizeClass,\n  normalizeProps,\n  normalizeStyle,\n  onActivated,\n  onBeforeMount,\n  onBeforeUnmount,\n  onBeforeUpdate,\n  onDeactivated,\n  onErrorCaptured,\n  onMounted,\n  onRenderTracked,\n  onRenderTriggered,\n  onScopeDispose,\n  onServerPrefetch,\n  onUnmounted,\n  onUpdated,\n  openBlock,\n  popScopeId,\n  provide,\n  proxyRefs,\n  pushScopeId,\n  queuePostFlushCb,\n  reactive,\n  readonly,\n  ref,\n  registerRuntimeCompiler,\n  render,\n  renderList,\n  renderSlot,\n  resolveComponent,\n  resolveDirective,\n  resolveDynamicComponent,\n  resolveFilter,\n  resolveTransitionHooks,\n  setBlockTracking,\n  setDevtoolsHook,\n  setTransitionHooks,\n  shallowReactive,\n  shallowReadonly,\n  shallowRef,\n  ssrContextKey,\n  ssrUtils,\n  stop,\n  toDisplayString,\n  toHandlerKey,\n  toHandlers,\n  toRaw,\n  toRef,\n  toRefs,\n  toValue,\n  transformVNodeArgs,\n  triggerRef,\n  unref,\n  useAttrs,\n  useCssModule,\n  useCssVars,\n  useModel,\n  useSSRContext,\n  useSlots,\n  useTransitionState,\n  vModelCheckbox,\n  vModelDynamic,\n  vModelRadio,\n  vModelSelect,\n  vModelText,\n  vShow,\n  version,\n  warn,\n  watch,\n  watchEffect,\n  watchPostEffect,\n  watchSyncEffect,\n  withAsyncContext,\n  withCtx,\n  withDefaults,\n  withDirectives,\n  withKeys,\n  withMemo,\n  withModifiers,\n  withScopeId\n};\n//# sourceMappingURL=vue.js.map\n"
        }
      },
      "id": 2,
      "thread_id": 0,
      "parent_id": 1,
      "elapsed": 0.00011662500037346035
    }
  ],
  "version": "1.12",
  "metadata": {
    "client": {
      "name": "appmap-node",
      "version": "2.23.0",
      "url": "https://github.com/getappmap/appmap-node"
    },
    "language": {
      "name": "javascript",
      "engine": "Node.js",
      "version": "v20.11.1"
    },
    "app": "rdh-admin",
    "recorder": {
      "type": "requests",
      "name": "requests"
    },
    "name": "GET /node_modules/.vite/deps/vue.js (200) â€” 2024-07-13T13:08:26.822Z"
  },
  "classMap": [
    {
      "type": "http",
      "name": "HTTP server requests",
      "children": [
        {
          "type": "route",
          "name": "GET /node_modules/.vite/deps/vue.js"
        }
      ]
    }
  ]
}