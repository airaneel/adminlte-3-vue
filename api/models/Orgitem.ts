/* tslint:disable */
/* eslint-disable */
/**
 * Your Project API
 * API documentation for your project
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@yourproject.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Orgitem
 */
export interface Orgitem {
    /**
     * 
     * @type {number}
     * @memberof Orgitem
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Orgitem
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof Orgitem
     */
    orgform?: string;
    /**
     * 
     * @type {string}
     * @memberof Orgitem
     */
    legalAdress?: string;
    /**
     * 
     * @type {string}
     * @memberof Orgitem
     */
    physicalAdress?: string;
    /**
     * 
     * @type {string}
     * @memberof Orgitem
     */
    inn: string;
    /**
     * 
     * @type {string}
     * @memberof Orgitem
     */
    kpp: string;
    /**
     * 
     * @type {string}
     * @memberof Orgitem
     */
    ogrn: string;
    /**
     * 
     * @type {string}
     * @memberof Orgitem
     */
    okpo: string;
    /**
     * 
     * @type {boolean}
     * @memberof Orgitem
     */
    isActive?: boolean;
    /**
     * 
     * @type {Date}
     * @memberof Orgitem
     */
    regDate?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof Orgitem
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Orgitem
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {number}
     * @memberof Orgitem
     */
    parentorg?: number | null;
    /**
     * 
     * @type {Set<number>}
     * @memberof Orgitem
     */
    phones: Set<number>;
    /**
     * 
     * @type {Set<number>}
     * @memberof Orgitem
     */
    emails: Set<number>;
}

/**
 * Check if a given object implements the Orgitem interface.
 */
export function instanceOfOrgitem(value: object): value is Orgitem {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('inn' in value) || value['inn'] === undefined) return false;
    if (!('kpp' in value) || value['kpp'] === undefined) return false;
    if (!('ogrn' in value) || value['ogrn'] === undefined) return false;
    if (!('okpo' in value) || value['okpo'] === undefined) return false;
    if (!('phones' in value) || value['phones'] === undefined) return false;
    if (!('emails' in value) || value['emails'] === undefined) return false;
    return true;
}

export function OrgitemFromJSON(json: any): Orgitem {
    return OrgitemFromJSONTyped(json, false);
}

export function OrgitemFromJSONTyped(json: any, ignoreDiscriminator: boolean): Orgitem {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'name': json['name'],
        'orgform': json['orgform'] == null ? undefined : json['orgform'],
        'legalAdress': json['legal_adress'] == null ? undefined : json['legal_adress'],
        'physicalAdress': json['physical_adress'] == null ? undefined : json['physical_adress'],
        'inn': json['inn'],
        'kpp': json['kpp'],
        'ogrn': json['ogrn'],
        'okpo': json['okpo'],
        'isActive': json['is_active'] == null ? undefined : json['is_active'],
        'regDate': json['reg_date'] == null ? undefined : (new Date(json['reg_date'])),
        'createdAt': json['created_at'] == null ? undefined : (new Date(json['created_at'])),
        'updatedAt': json['updated_at'] == null ? undefined : (new Date(json['updated_at'])),
        'parentorg': json['parentorg'] == null ? undefined : json['parentorg'],
        'phones': json['phones'],
        'emails': json['emails'],
    };
}

export function OrgitemToJSON(value?: Omit<Orgitem, 'id'|'created_at'|'updated_at'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'orgform': value['orgform'],
        'legal_adress': value['legalAdress'],
        'physical_adress': value['physicalAdress'],
        'inn': value['inn'],
        'kpp': value['kpp'],
        'ogrn': value['ogrn'],
        'okpo': value['okpo'],
        'is_active': value['isActive'],
        'reg_date': value['regDate'] == null ? undefined : ((value['regDate'] as any).toISOString()),
        'parentorg': value['parentorg'],
        'phones': Array.from(value['phones'] as Set<any>),
        'emails': Array.from(value['emails'] as Set<any>),
    };
}

