/* tslint:disable */
/* eslint-disable */
/**
 * Your Project API
 * API documentation for your project
 *
 * The version of the OpenAPI document: v1
 * Contact: contact@yourproject.local
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface Document
 */
export interface Document {
    /**
     * 
     * @type {number}
     * @memberof Document
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    docType: DocumentDocTypeEnum;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    number: string;
    /**
     * 
     * @type {Date}
     * @memberof Document
     */
    date: Date;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    amount: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    purpose: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    payerName: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    payerInn: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    payerAccount: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    payerBankName: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    payerBik: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    payerCorrespondentAccount: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    recipientName: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    recipientInn: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    recipientAccount: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    paymentType: string;
    /**
     * 
     * @type {number}
     * @memberof Document
     */
    paymentOrder: number;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    paymentMode: string;
    /**
     * 
     * @type {Date}
     * @memberof Document
     */
    dateWithdrawn?: Date | null;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    recipientBankName: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    recipientBik: string;
    /**
     * 
     * @type {string}
     * @memberof Document
     */
    recipientCorrespondentAccount: string;
}


/**
 * @export
 */
export const DocumentDocTypeEnum = {
    BankOrder: 'bank_order',
    Invoice: 'invoice'
} as const;
export type DocumentDocTypeEnum = typeof DocumentDocTypeEnum[keyof typeof DocumentDocTypeEnum];


/**
 * Check if a given object implements the Document interface.
 */
export function instanceOfDocument(value: object): value is Document {
    if (!('docType' in value) || value['docType'] === undefined) return false;
    if (!('number' in value) || value['number'] === undefined) return false;
    if (!('date' in value) || value['date'] === undefined) return false;
    if (!('amount' in value) || value['amount'] === undefined) return false;
    if (!('purpose' in value) || value['purpose'] === undefined) return false;
    if (!('payerName' in value) || value['payerName'] === undefined) return false;
    if (!('payerInn' in value) || value['payerInn'] === undefined) return false;
    if (!('payerAccount' in value) || value['payerAccount'] === undefined) return false;
    if (!('payerBankName' in value) || value['payerBankName'] === undefined) return false;
    if (!('payerBik' in value) || value['payerBik'] === undefined) return false;
    if (!('payerCorrespondentAccount' in value) || value['payerCorrespondentAccount'] === undefined) return false;
    if (!('recipientName' in value) || value['recipientName'] === undefined) return false;
    if (!('recipientInn' in value) || value['recipientInn'] === undefined) return false;
    if (!('recipientAccount' in value) || value['recipientAccount'] === undefined) return false;
    if (!('paymentType' in value) || value['paymentType'] === undefined) return false;
    if (!('paymentOrder' in value) || value['paymentOrder'] === undefined) return false;
    if (!('paymentMode' in value) || value['paymentMode'] === undefined) return false;
    if (!('recipientBankName' in value) || value['recipientBankName'] === undefined) return false;
    if (!('recipientBik' in value) || value['recipientBik'] === undefined) return false;
    if (!('recipientCorrespondentAccount' in value) || value['recipientCorrespondentAccount'] === undefined) return false;
    return true;
}

export function DocumentFromJSON(json: any): Document {
    return DocumentFromJSONTyped(json, false);
}

export function DocumentFromJSONTyped(json: any, ignoreDiscriminator: boolean): Document {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'] == null ? undefined : json['id'],
        'docType': json['doc_type'],
        'number': json['number'],
        'date': (new Date(json['date'])),
        'amount': json['amount'],
        'purpose': json['purpose'],
        'payerName': json['payer_name'],
        'payerInn': json['payer_inn'],
        'payerAccount': json['payer_account'],
        'payerBankName': json['payer_bank_name'],
        'payerBik': json['payer_bik'],
        'payerCorrespondentAccount': json['payer_correspondent_account'],
        'recipientName': json['recipient_name'],
        'recipientInn': json['recipient_inn'],
        'recipientAccount': json['recipient_account'],
        'paymentType': json['payment_type'],
        'paymentOrder': json['payment_order'],
        'paymentMode': json['payment_mode'],
        'dateWithdrawn': json['date_withdrawn'] == null ? undefined : (new Date(json['date_withdrawn'])),
        'recipientBankName': json['recipient_bank_name'],
        'recipientBik': json['recipient_bik'],
        'recipientCorrespondentAccount': json['recipient_correspondent_account'],
    };
}

export function DocumentToJSON(value?: Omit<Document, 'id'> | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'doc_type': value['docType'],
        'number': value['number'],
        'date': ((value['date']).toISOString().substring(0,10)),
        'amount': value['amount'],
        'purpose': value['purpose'],
        'payer_name': value['payerName'],
        'payer_inn': value['payerInn'],
        'payer_account': value['payerAccount'],
        'payer_bank_name': value['payerBankName'],
        'payer_bik': value['payerBik'],
        'payer_correspondent_account': value['payerCorrespondentAccount'],
        'recipient_name': value['recipientName'],
        'recipient_inn': value['recipientInn'],
        'recipient_account': value['recipientAccount'],
        'payment_type': value['paymentType'],
        'payment_order': value['paymentOrder'],
        'payment_mode': value['paymentMode'],
        'date_withdrawn': value['dateWithdrawn'] == null ? undefined : ((value['dateWithdrawn'] as any).toISOString().substring(0,10)),
        'recipient_bank_name': value['recipientBankName'],
        'recipient_bik': value['recipientBik'],
        'recipient_correspondent_account': value['recipientCorrespondentAccount'],
    };
}

